"""add_order_linking_to_packages

Revision ID: fcdedbcda84a
Revises: 88dcb87dd2aa
Create Date: 2025-08-15 00:00:11.638875

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fcdedbcda84a'
down_revision: Union[str, None] = '88dcb87dd2aa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite doesn't support ALTER COLUMN operations for defaults
    # Skip all the ALTER COLUMN operations that just change defaults
    
    # Check if indexes exist before trying to drop them
    from sqlalchemy import inspect
    conn = op.get_bind()
    inspector = inspect(conn)
    
    # Drop indexes only if they exist
    existing_indexes = {idx['name'] for idx in inspector.get_indexes('medication_packages')}
    if 'ix_medication_packages_gtin' in existing_indexes:
        op.drop_index('ix_medication_packages_gtin', table_name='medication_packages')
    if 'ix_medication_packages_national_number' in existing_indexes:
        op.drop_index('ix_medication_packages_national_number', table_name='medication_packages')
    
    # Main change: Add order_item_id column to package_inventory
    # Check if column already exists
    from sqlalchemy import text
    conn = op.get_bind()
    result = conn.execute(text("PRAGMA table_info(package_inventory)"))
    columns = [row[1] for row in result]
    
    if 'order_item_id' not in columns:
        op.add_column('package_inventory', sa.Column('order_item_id', sa.Integer(), nullable=True))
    
    # Drop indexes only if they exist
    existing_indexes = {idx['name'] for idx in inspector.get_indexes('package_inventory')}
    if 'ix_package_inventory_medication_id' in existing_indexes:
        op.drop_index('ix_package_inventory_medication_id', table_name='package_inventory')
    if 'ix_package_inventory_status' in existing_indexes:
        op.drop_index('ix_package_inventory_status', table_name='package_inventory')
    
    # Skip foreign key creation for SQLite (not supported on existing tables)
    # The foreign key will be enforced at the SQLAlchemy ORM level
    
    # Drop indexes only if they exist
    existing_indexes = {idx['name'] for idx in inspector.get_indexes('scanned_items')}
    if 'ix_scanned_items_expiry_date' in existing_indexes:
        op.drop_index('ix_scanned_items_expiry_date', table_name='scanned_items')
    if 'ix_scanned_items_status' in existing_indexes:
        op.drop_index('ix_scanned_items_status', table_name='scanned_items')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove the order_item_id column
    op.drop_column('package_inventory', 'order_item_id')
    # ### end Alembic commands ###
